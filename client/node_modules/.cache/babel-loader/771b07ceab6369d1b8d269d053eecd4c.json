{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/lighthouse/snapshot/Snapshot-App/client/src/components/PostDetails/PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Paper, Typography, CircularProgress, Divider, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostsBySearch, likePost } from \"../../actions/posts\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ThumbUpAlt from \"@material-ui/icons/ThumbUpAlt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = () => {\n  _s();\n\n  var _recommendedPosts;\n\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); // User\n\n  const user = JSON.parse(localStorage.getItem(\"profile\")); // Likes Sub Component\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(like => {\n        var _user$result, _user$result2;\n\n        return like === ((user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id));\n      }) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAlt, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \"\\xA0\", post.likes.length > 1 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \"\\xA0\", post.likes.length, \" \", post.likes.length === 1 ? \"Like\" : \"Likes\"]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"\\xA0Like\"]\n    }, void 0, true);\n  }; // useEffect Hooks\n\n\n  useEffect(() => {\n    // Get Post by Id\n    dispatch(getPost(id));\n  }, [dispatch, id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: \"none\",\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(\",\")\n      }));\n    }\n  }, [post]);\n  if (!post) return null;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"7em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  let recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n\n  if (((_recommendedPosts = recommendedPosts) === null || _recommendedPosts === void 0 ? void 0 : _recommendedPosts.length) > 4) {\n    recommendedPosts = recommendedPosts.splice(0, 3);\n  }\n\n  const openPost = _id => history.push(`/posts/${_id}`); // Return\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: \"20px\",\n      borderRadius: \"15px\"\n    },\n    elevation: 6,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          component: \"p\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: () => dispatch(likePost(post._id)),\n          disabled: !(user === null || user === void 0 ? void 0 : user.result),\n          children: /*#__PURE__*/_jsxDEV(Likes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Created by: \", post.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Realtime Chat - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Comments - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageSection,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.media,\n          src: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), recommendedPosts.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        children: \"You might also like:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.recommendedPosts,\n        children: recommendedPosts.map(({\n          title,\n          message,\n          name,\n          likes,\n          selectedFile,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px\",\n            cursor: \"pointer\"\n          },\n          onClick: () => openPost(_id),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Likes: \", likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            width: \"200px\",\n            alt: \"image12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetails, \"tI7gvGJS3PURxKF89lAkjzOuqto=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useStyles, useParams];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/Users/abdul/lighthouse/snapshot/Snapshot-App/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","Button","useDispatch","useSelector","getPost","getPostsBySearch","likePost","moment","useParams","useHistory","useStyles","ThumbUpAltOutlined","ThumbUpAlt","PostDetails","post","posts","isLoading","state","dispatch","history","classes","id","user","JSON","parse","localStorage","getItem","Likes","likes","length","find","like","result","googleId","_id","search","tags","join","loadingPaper","recommendedPosts","filter","splice","openPost","push","padding","borderRadius","card","section","title","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Paper, Typography, CircularProgress, Divider, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostsBySearch, likePost } from \"../../actions/posts\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ThumbUpAlt from \"@material-ui/icons/ThumbUpAlt\";\n\nconst PostDetails = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  // User\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  // Likes Sub Component\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(\n        (like) => like === (user?.result?.googleId || user?.result?._id)\n      ) ? (\n        <>\n          <ThumbUpAlt fontSize=\"small\" />\n          &nbsp;\n          {post.likes.length > 1\n            ? `You and ${post.likes.length - 1} others`\n            : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  // useEffect Hooks\n  useEffect(() => {\n    // Get Post by Id\n    dispatch(getPost(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(\n        getPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\n      );\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\n  let recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  if (recommendedPosts?.length > 4) {\n    recommendedPosts = recommendedPosts.splice(0, 3);\n  }\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n\n  // Return\n  return (\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"textSecondary\"\n            component=\"h2\"\n          >\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            {post.message}\n          </Typography>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => dispatch(likePost(post._id))}\n            disabled={!user?.result}\n          >\n            <Likes />\n          </Button>\n\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Comments - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={\n              post.selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n            }\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(\n              ({ title, message, name, likes, selectedFile, _id }) => (\n                <div\n                  style={{ margin: \"20px\", cursor: \"pointer\" }}\n                  onClick={() => openPost(_id)}\n                  key={_id}\n                >\n                  <Typography variant=\"h6\" gutterBottom>\n                    {title}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {name}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {message}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Likes: {likes.length}\n                  </Typography>\n                  <img src={selectedFile} width=\"200px\" alt=\"image12\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}