{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/lighthouse/MERN-Memories-App/client/src/components/PostDetails/PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Paper, Typography, CircularProgress, Divider, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostsBySearch, likePost } from \"../../actions/posts\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = () => {\n  _s();\n\n  var _recommendedPosts;\n\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); // use Effect\n\n  useEffect(() => {\n    // Get Post by Id\n    dispatch(getPost(id));\n  }, [dispatch, id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: \"none\",\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(\",\")\n      }));\n    }\n  }, [post]);\n  if (!post) return null;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"7em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  let recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n\n  if (((_recommendedPosts = recommendedPosts) === null || _recommendedPosts === void 0 ? void 0 : _recommendedPosts.length) > 4) {\n    recommendedPosts = recommendedPosts.splice(0, 3);\n  }\n\n  const openPost = _id => history.push(`/posts/${_id}`); // Return\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: \"20px\",\n      borderRadius: \"15px\"\n    },\n    elevation: 6,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          component: \"p\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          disabled: !(post === null || post === void 0 ? void 0 : post.creator),\n          onClick: () => dispatch(likePost(post._id)),\n          children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \"\\xA0Like\\xA0\", post.likeCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Created by: \", post.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Realtime Chat - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Comments - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageSection,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.media,\n          src: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), recommendedPosts.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        children: \"You might also like:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.recommendedPosts,\n        children: recommendedPosts.map(({\n          title,\n          message,\n          name,\n          likes,\n          selectedFile,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px\",\n            cursor: \"pointer\"\n          },\n          onClick: () => openPost(_id),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Likes: \", likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            width: \"200px\",\n            alt: \"image12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetails, \"tI7gvGJS3PURxKF89lAkjzOuqto=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useStyles, useParams];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/Users/abdul/lighthouse/MERN-Memories-App/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","Button","useDispatch","useSelector","getPost","getPostsBySearch","likePost","moment","useParams","useHistory","useStyles","ThumbUpAltOutlined","PostDetails","post","posts","isLoading","state","dispatch","history","classes","id","search","tags","join","loadingPaper","recommendedPosts","filter","_id","length","splice","openPost","push","padding","borderRadius","card","section","title","map","tag","message","creator","likeCount","name","createdAt","fromNow","margin","imageSection","media","selectedFile","likes","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Paper, Typography, CircularProgress, Divider, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostsBySearch, likePost } from \"../../actions/posts\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\n\nconst PostDetails = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  // use Effect\n  useEffect(() => {\n    // Get Post by Id\n    dispatch(getPost(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(\n        getPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\n      );\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\n  let recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  if (recommendedPosts?.length > 4) {\n    recommendedPosts = recommendedPosts.splice(0, 3);\n  }\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  // Return\n  return (\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"textSecondary\"\n            component=\"h2\"\n          >\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            {post.message}\n          </Typography>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            disabled={!post?.creator}\n            onClick={() => dispatch(likePost(post._id))}\n          >\n            <ThumbUpAltOutlined fontSize=\"small\" />\n            &nbsp;Like&nbsp;\n            {post.likeCount}\n          </Button>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Comments - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={\n              post.selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n            }\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(\n              ({ title, message, name, likes, selectedFile, _id }) => (\n                <div\n                  style={{ margin: \"20px\", cursor: \"pointer\" }}\n                  onClick={() => openPost(_id)}\n                  key={_id}\n                >\n                  <Typography variant=\"h6\" gutterBottom>\n                    {title}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {name}\n                  </Typography>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {message}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Likes: {likes.length}\n                  </Typography>\n                  <img src={selectedFile} width=\"200px\" alt=\"image12\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}